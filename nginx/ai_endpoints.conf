# Configuración Nginx específica para endpoints de IA
# Dashboard IT - Clínica Bonsana

# Rate limiting para endpoints de IA
limit_req_zone $binary_remote_addr zone=ai_analysis:10m rate=2r/m;
limit_req_zone $binary_remote_addr zone=ai_status:10m rate=10r/m;

# Cache para respuestas de estado de IA
proxy_cache_path /var/cache/nginx/ai_status levels=1:2 keys_zone=ai_status_cache:10m max_size=100m inactive=60m use_temp_path=off;

server {
    listen 80;
    server_name _;
    
    # Configuración general
    client_max_body_size 50M;
    client_body_timeout 120s;
    client_header_timeout 60s;
    
    # Logs específicos para IA
    access_log /var/log/nginx/ai_access.log combined;
    error_log /var/log/nginx/ai_error.log;
    
    # Endpoint principal del dashboard
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts estándar
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Endpoint de análisis IA - configuración especial
    location /api/ai/analyze {
        # Rate limiting estricto para análisis IA
        limit_req zone=ai_analysis burst=1 nodelay;
        limit_req_status 429;
        
        # Headers de seguridad
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        
        # Proxy configuration con timeouts extendidos
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-AI-Request "true";
        
        # Timeouts extendidos para análisis IA
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        
        # Buffer configuration para respuestas grandes
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
        
        # No cache para análisis
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header X-Cache-Status "NOCACHE";
        
        # Logging específico para análisis IA
        access_log /var/log/nginx/ai_analysis.log combined;
        
        # Error handling personalizado
        proxy_intercept_errors on;
        error_page 502 503 504 /ai_error.html;
    }
    
    # Endpoint de estado IA - con cache
    location /api/ai/status {
        # Rate limiting moderado
        limit_req zone=ai_status burst=5 nodelay;
        
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache para estado de IA (30 segundos)
        proxy_cache ai_status_cache;
        proxy_cache_valid 200 30s;
        proxy_cache_valid 404 502 503 5s;
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        
        # Headers de cache
        add_header X-Cache-Status $upstream_cache_status;
        
        # Timeouts estándar
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Endpoint de salud con cache
    location /health {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Cache para health check
        proxy_cache ai_status_cache;
        proxy_cache_valid 200 10s;
        proxy_cache_valid 404 502 503 1s;
        
        # Timeouts rápidos para health check
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Sin logging para health checks
        access_log off;
    }
    
    # Archivos estáticos con cache largo
    location /static {
        alias /app/static;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Compresión para archivos estáticos
        gzip on;
        gzip_types text/css application/javascript text/javascript application/json;
        gzip_min_length 1000;
    }
    
    # Página de error personalizada para IA
    location = /ai_error.html {
        root /var/www/html;
        internal;
    }
    
    # Endpoint de métricas (para monitoreo)
    location /api/metrics {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Cache corto para métricas
        proxy_cache ai_status_cache;
        proxy_cache_valid 200 5s;
        
        # Rate limiting moderado
        limit_req zone=ai_status burst=10 nodelay;
    }
    
    # Bloquear acceso directo a archivos de configuración
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Bloquear acceso a archivos sensibles
    location ~* \.(env|conf|config|bak|backup|swp|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Configuración para HTTPS (SSL)
server {
    listen 443 ssl http2;
    server_name dashboard.clinicabonsana.com;
    
    # Certificados SSL
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    
    # Configuración SSL moderna
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Headers de seguridad adicionales
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com; img-src 'self' data:; font-src 'self' cdnjs.cloudflare.com;";
    
    # Incluir la misma configuración que HTTP
    include /etc/nginx/conf.d/ai_locations.conf;
}

# Configuración específica para desarrollo
server {
    listen 8080;
    server_name localhost;
    
    # Configuración de desarrollo - más permisiva
    client_max_body_size 100M;
    
    # Logging detallado para desarrollo
    access_log /var/log/nginx/dev_access.log combined;
    error_log /var/log/nginx/dev_error.log debug;
    
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Development "true";
        
        # Sin rate limiting en desarrollo
        # Sin cache en desarrollo
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # Timeouts más largos para debugging
        proxy_connect_timeout 120s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # CORS headers para desarrollo
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
}

# Configuración para balanceador de carga (múltiples instancias)
upstream dashboard_backend {
    # Método de balanceeo basado en IP para sesiones sticky
    ip_hash;
    
    # Instancias del dashboard
    server 127.0.0.1:5000 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:5001 weight=1 max_fails=3 fail_timeout=30s backup;
    
    # Health check pasivo
    keepalive 32;
}

# Configuración del balanceador
server {
    listen 9000;
    server_name _;
    
    # Headers para identificar balanceador
    add_header X-Load-Balancer "nginx" always;
    add_header X-Backend-Server $upstream_addr always;
    
    location / {
        proxy_pass http://dashboard_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuración para sesiones sticky
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # Health check del upstream
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_timeout 60s;
        proxy_next_upstream_tries 2;
    }
    
    # Endpoint de análisis IA con balanceeo especial
    location /api/ai/analyze {
        # Solo usar servidor principal para análisis IA (consistencia)
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-AI-Primary "true";
        
        # Timeouts extendidos
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        
        # Rate limiting global
        limit_req zone=ai_analysis burst=1 nodelay;
    }
}